rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null && 
        (request.auth.uid == userId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow write: if request.auth != null && 
        (request.auth.uid == userId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    match /skills/{skillId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.email_verified == true;
    }
    
    match /bookings/{bookingId} {
      allow read: if request.auth != null && 
        (resource.data.studentId == request.auth.uid || 
         resource.data.tutorId == request.auth.uid);
      allow write: if request.auth != null && 
        request.auth.token.email_verified == true && 
        (!resource.data || 
         resource.data.studentId == request.auth.uid || 
         resource.data.tutorId == request.auth.uid);
    }
    
    match /reviews/{reviewId} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.token.email_verified == true && 
        (!resource.data || resource.data.userId == request.auth.uid);
    }
    
    match /favorites/{userId}/{documentId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /messages/{conversationId}/messages/{messageId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/messages/$(conversationId)/participants/$(request.auth.uid));
      allow write: if request.auth != null && 
        request.auth.token.email_verified == true && 
        exists(/databases/$(database)/documents/messages/$(conversationId)/participants/$(request.auth.uid));
    }
  }
}
